openapi: "3.0.0"
info:
  title: "API Login"
  description: "Documentação da API para gerenciar Login"
  version: "1.0.0"
servers:
  - url: "http://localhost:3000"
paths:
  /login:
    get:
      summary: "Lista todos os logins"
      responses:
        '200':
          description: "Lista de logins"
    post:
      summary: "Cria um novo login"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        '201':
          description: "Login criado com sucesso"
        '400':
          description: "Erro na requisição"
  /login/{id}:
    get:
      summary: "Busca um login pelo ID"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID do login a ser buscado"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Login encontrado"
        '404':
          description: "Login não encontrado"
    put:
      summary: "Atualiza um login existente"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID do login a ser atualizado"
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cliente"
      responses:
        '200':
          description: "Login atualizado com sucesso"
        '404':
          description: "Login não encontrado"
    delete:
      summary: "Deleta um login existente"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID do login a ser deletado"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Login deletado com sucesso"
        '404':
          description: "Login não encontrado"


  /cliente:
    get:
      summary: "Lista todos os clientes"
      responses:
        '200':
          description: "Lista de clientes"
    post:
      summary: "Cria um novo cliente"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cliente"
      responses:
        '201':
          description: "Cliente criado com sucesso"
        '400':
          description: "Erro na requisição"
  /cliente/{id}:
    get:
      summary: "Busca um cliente pelo ID"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID do cliente a ser buscado"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Cliente encontrado"
        '404':
          description: "Cliente não encontrado"
    put:
      summary: "Atualiza um cliente existente"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID do cliente a ser atualizado"
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cliente"
      responses:
        '200':
          description: "Cliente atualizado com sucesso"
        '404':
          description: "Cliente não encontrado"
    delete:
      summary: "Deleta um cliente existente"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID do Cliente a ser deletado"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Cliente deletado com sucesso"
        '404':
          description: "Cliente não encontrado"
  

  components:
  schemas:
  
    Cliente:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        cpf:
          type: string
        email:
          type: string
        telefone:
          type: string
        loginId:
          type: integer
    Login:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
        